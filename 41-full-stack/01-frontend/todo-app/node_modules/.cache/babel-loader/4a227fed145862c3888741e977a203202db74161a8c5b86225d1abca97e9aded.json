{"ast":null,"code":"var _jsxFileName = \"/Users/ranga/Ranga/git/00.courses/master-spring-and-spring-boot/41-full-stack/01-frontend/todo-app/src/components/todo/ListTodosComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { retrieveAllTodosForUsername } from \"./api/TodoApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListTodosComponent() {\n  _s();\n  const today = new Date();\n  const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay());\n  const [todos, setTodos] = useState([]);\n\n  // const todos = [\n  //                 // {id: 1, description: 'Learn AWS', done: false, targetDate:targetDate},\n  //                 // {id: 2, description: 'Learn Full Stack Dev', done: false, targetDate:targetDate},\n  //                 // {id: 3, description: 'Learn DevOps', done: false, targetDate:targetDate},\n  //             ]\n\n  //useEffect - tell React that your component needs to do something after render.\n\n  function refreshTodos() {\n    retrieveAllTodosForUsername('in28minutes').then(response => console.log(response)).catch(error => console.log(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Things You Want To Do!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Is Done?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.done.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.targetDate.toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ListTodosComponent, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n_c = ListTodosComponent;\nexport default ListTodosComponent;\nvar _c;\n$RefreshReg$(_c, \"ListTodosComponent\");","map":{"version":3,"names":["useEffect","useState","retrieveAllTodosForUsername","ListTodosComponent","today","Date","targetDate","getFullYear","getMonth","getDay","todos","setTodos","refreshTodos","then","response","console","log","catch","error","map","todo","id","description","done","toString","toDateString"],"sources":["/Users/ranga/Ranga/git/00.courses/master-spring-and-spring-boot/41-full-stack/01-frontend/todo-app/src/components/todo/ListTodosComponent.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { retrieveAllTodosForUsername } from \"./api/TodoApiService\"\n\nfunction ListTodosComponent() {\n\n    const today = new Date()\n    \n    const targetDate = new Date(today.getFullYear()+12, today.getMonth(), today.getDay())\n\n    const [todos,setTodos] = useState([])\n    \n    // const todos = [\n    //                 // {id: 1, description: 'Learn AWS', done: false, targetDate:targetDate},\n    //                 // {id: 2, description: 'Learn Full Stack Dev', done: false, targetDate:targetDate},\n    //                 // {id: 3, description: 'Learn DevOps', done: false, targetDate:targetDate},\n    //             ]\n\n    //useEffect - tell React that your component needs to do something after render.\n\n    function refreshTodos() {\n    retrieveAllTodosForUsername('in28minutes')\n    .then(response => console.log(response))\n    .catch(error => console.log(error))\n}\n\n    return (\n        <div className=\"container\">\n            <h1>Things You Want To Do!</h1>\n            <div>\n                <table className=\"table\">\n                    <thead>\n                            <tr>\n                                <td>ID</td>\n                                <td>Description</td>\n                                <td>Is Done?</td>\n                                <td>Target Date</td>\n                            </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        todos.map(\n                            todo => (\n                                <tr key={todo.id}>\n                                    <td>{todo.id}</td>\n                                    <td>{todo.description}</td>\n                                    <td>{todo.done.toString()}</td>\n                                    <td>{todo.targetDate.toDateString()}</td>\n                                </tr>\n                            )\n                        )\n                    }\n                    </tbody>\n\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ListTodosComponent"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,2BAA2B,QAAQ,sBAAsB;AAAA;AAElE,SAASC,kBAAkB,GAAG;EAAA;EAE1B,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EAExB,MAAMC,UAAU,GAAG,IAAID,IAAI,CAACD,KAAK,CAACG,WAAW,EAAE,GAAC,EAAE,EAAEH,KAAK,CAACI,QAAQ,EAAE,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC;EAErF,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAErC;EACA;EACA;EACA;EACA;;EAEA;;EAEA,SAASW,YAAY,GAAG;IACxBV,2BAA2B,CAAC,aAAa,CAAC,CACzCW,IAAI,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CACvCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EACvC;EAEI,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,eAC/B;MAAA,uBACI;QAAO,SAAS,EAAC,OAAO;QAAA,wBACpB;UAAA,uBACQ;YAAA,wBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW,eACX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAoB,eACpB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAiB,eACjB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAoB;UAAA;YAAA;YAAA;YAAA;UAAA;QACnB;UAAA;UAAA;UAAA;QAAA,QACL,eACR;UAAA,UAEIR,KAAK,CAACS,GAAG,CACLC,IAAI,iBACA;YAAA,wBACI;cAAA,UAAKA,IAAI,CAACC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAM,eAClB;cAAA,UAAKD,IAAI,CAACE;YAAW;cAAA;cAAA;cAAA;YAAA,QAAM,eAC3B;cAAA,UAAKF,IAAI,CAACG,IAAI,CAACC,QAAQ;YAAE;cAAA;cAAA;cAAA;YAAA,QAAM,eAC/B;cAAA,UAAKJ,IAAI,CAACd,UAAU,CAACmB,YAAY;YAAE;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA,GAJpCL,IAAI,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAMnB;QACJ;UAAA;UAAA;UAAA;QAAA,QAEG;MAAA;QAAA;QAAA;QAAA;MAAA;IAEJ;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAtDQlB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAwD3B,eAAeA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}