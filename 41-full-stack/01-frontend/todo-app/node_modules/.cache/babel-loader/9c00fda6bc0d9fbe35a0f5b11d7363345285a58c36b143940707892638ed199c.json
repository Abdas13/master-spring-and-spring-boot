{"ast":null,"code":"var _jsxFileName = \"/Users/ranga/Ranga/git/00.courses/master-spring-and-spring-boot/41-full-stack/01-frontend/todo-app/src/components/todo/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\n\n//1: Create a Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n//2: Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  //3: Put some state in the context\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n\n  // function login(username, password) {\n  //     if(username==='in28minutes' && password==='dummy'){\n  //         setAuthenticated(true)\n  //         setUsername(username)\n  //         return true            \n  //     } else {\n  //         setAuthenticated(false)\n  //         setUsername(null)\n  //         return false\n  //     }        \n  // }\n\n  function login(username, password) {\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password);\n    executeBasicAuthenticationService(baToken).then(response => console.log(response)).catch(error => console.log(error));\n    setAuthenticated(false);\n\n    // if(username==='in28minutes' && password==='dummy'){\n    //     setAuthenticated(true)\n    //     setUsername(username)\n    //     return true            \n    // } else {\n    //     setAuthenticated(false)\n    //     setUsername(null)\n    //     return false\n    // }        \n  }\n\n  function logout() {\n    setAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"r+hfkL8+aON1x8Go1nUIN28kT5E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationService","AuthContext","useAuth","AuthProvider","children","isAuthenticated","setAuthenticated","username","setUsername","login","password","baToken","window","btoa","then","response","console","log","catch","error","logout"],"sources":["/Users/ranga/Ranga/git/00.courses/master-spring-and-spring-boot/41-full-stack/01-frontend/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\n\n//1: Create a Context\nexport const AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\n//2: Share the created context with other components\nexport default function AuthProvider({ children }) {\n\n    //3: Put some state in the context\n    const [isAuthenticated, setAuthenticated] = useState(false)\n\n    const [username, setUsername] = useState(null)\n\n    // function login(username, password) {\n    //     if(username==='in28minutes' && password==='dummy'){\n    //         setAuthenticated(true)\n    //         setUsername(username)\n    //         return true            \n    //     } else {\n    //         setAuthenticated(false)\n    //         setUsername(null)\n    //         return false\n    //     }        \n    // }\n\n    function login(username, password) {\n\n        const baToken = 'Basic ' + window.btoa( username + \":\" + password )\n\n        executeBasicAuthenticationService(baToken)\n        .then (response => console.log(response))\n        .catch (error => console.log(error))\n\n        setAuthenticated(false)\n\n        // if(username==='in28minutes' && password==='dummy'){\n        //     setAuthenticated(true)\n        //     setUsername(username)\n        //     return true            \n        // } else {\n        //     setAuthenticated(false)\n        //     setUsername(null)\n        //     return false\n        // }        \n    }\n\n\n    function logout() {\n        setAuthenticated(false)\n    }\n\n    return (\n        <AuthContext.Provider value={ {isAuthenticated, login, logout, username}  }>\n            {children}\n        </AuthContext.Provider>\n    )\n} "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iCAAiC,QAAQ,6BAA6B;;AAE/E;AAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,OAAO,MAAMK,OAAO,GAAG;EAAA;EAAA,OAAMJ,UAAU,CAACG,WAAW,CAAC;AAAA;;AAEpD;AAAA,GAFaC,OAAO;AAGpB,eAAe,SAASC,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAE7C;EACA,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASU,KAAK,CAACF,QAAQ,EAAEG,QAAQ,EAAE;IAE/B,MAAMC,OAAO,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAAEN,QAAQ,GAAG,GAAG,GAAGG,QAAQ,CAAE;IAEnEV,iCAAiC,CAACW,OAAO,CAAC,CACzCG,IAAI,CAAEC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CACxCG,KAAK,CAAEC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;IAEpCb,gBAAgB,CAAC,KAAK,CAAC;;IAEvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;;EAGA,SAASc,MAAM,GAAG;IACdd,gBAAgB,CAAC,KAAK,CAAC;EAC3B;EAEA,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAG;MAACD,eAAe;MAAEI,KAAK;MAAEW,MAAM;MAAEb;IAAQ,CAAI;IAAA,UACtEH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B;AAAC,IAlDuBD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}